@model EditProjectDTO
@inject RoleManager<Role> RoleManager
@inject UserManager<User> UserManager
@inject IViewsService ViewsService

@{
    var managers = await @ViewsService.GetOrganizationManagers();
    var errorMessage = ViewData["ErrorMessage"];

    if (errorMessage != null)
    {
        <h1 class="text-danger">Error</h1>
        <h2 class="text-danger">An error occurred while processing your request</h2>
        <p>@ViewData["ErrorMessage"]</p>
    }
}

<div class="row mb-2">
    <div class="col-12">
        <h1 class="text-center">Edit Project</h1>
    </div>
</div>

<div class="row">
    <div class="col">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="@Model.Id" />

            <div class="row mt-2">
                <div class="col-sm-12 col-lg-6">
                    <div class="form-group">
                        <label asp-for="@Model.Title" class="form-label">Project Title</label>
                        <input asp-for="@Model.Title" type="text" class="form-control">
                        <span asp-validation-for="@Model.Title" class="text-danger"></span>
                    </div>
                </div>

                <div class="col-sm-12 col-lg-6">
                    <div class="form-group">
                        <label asp-for="@Model.Priority" class="form-label">Priority</label>
                        <select asp-for="@Model.Priority" class="form-control custom-select">
                            <option selected disabled>Select Priority</option>
                            <option>Low</option>
                            <option>Medium</option>
                            <option>High</option>
                        </select>
                        <span asp-validation-for="@Model.Priority" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="row mt-2">
                <div class="col-sm-12 col-lg-6">
                    <div class="form-group">
                        @{
                            var managerList = new List<SelectListItem>();
                            foreach (var user in managers)
                            {
                                managerList.Add(new SelectListItem { Value = user.Id.ToString(), Text = user.Email });
                            }
                        }
                        <label asp-for="@Model.ManagerId" class="form-label">Project Manager</label>
                        <select asp-for="@Model.ManagerId" asp-items="@managerList" class="form-control custom-select"></select>
                        <span asp-validation-for="@Model.ManagerId" class="text-danger"></span>
                    </div>
                </div>

                <div class="col-sm-12 col-lg-6">
                    <div class="form-group">
                        <label asp-for="@Model.Status" class="form-label">Status</label>
                        <select asp-for="@Model.Status" class="form-control custom-select">
                            <option selected disabled>Select Status</option>
                            <option>Open</option>
                            <option>In Progress</option>
                            <option>Completed</option>
                            <option>Closed</option>
                        </select>
                        <span asp-validation-for="@Model.Status" class="text-danger"></span>
                    </div>
                </div>
            </div>


            <div class="row mt-2">
                <div class="col-12">
                    <div class="form-group">
                        <label asp-for="@Model.Description" class="form-label">Project Description</label>
                        <textarea id="descriptionEditor" asp-for="@Model.Description" class="form-control" rows="4"></textarea>
                        <span asp-validation-for="@Model.Description" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="row my-4">
                <div class="col-12">
                    <button type="submit" class="btn custom-btn-primary btn-lg">Save</button>

                    <a asp-controller="Projects" asp-action="Index" class="btn btn-secondary btn-lg">Cancel</a>

                    <button type="button"
                            class="btn btn-danger btn-lg float-right"
                            data-toggle="modal"
                            data-target="#deleteModal">
                        Delete
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Delete Modal -->
<div class="modal fade" id="deleteModal"
     data-backdrop="static"
     data-keyboard="false" tabindex="-1"
     aria-labelledby="deleteModalLabel"
     aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="deleteModalLabel">Delete Project?</h1>
            </div>
            <div class="modal-body">
                This will delete the project completely and can't be restored
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" onclick="deleteProject()">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(function () {
            $('#descriptionEditor').summernote();
        })

        function deleteProject() {
            $.ajax({
                type: 'POST',
                url: '/Projects/Delete',
                data: { "id": "@Model.Id.ToString()" },
                success: function (response) {
                    if (response.success) {
                        $('#deleteModal').modal('hide');
                        window.location.href = '/Projects/Index';
                    } else {
                        alert(response.message);
                    }
                },
                error: function (error) {
                    console.log(error);
                    alert("There was an error processing the request");
                }
            })
        }
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}