@model RegisterViewModel
@inject RoleManager<Role> RoleManager
@inject UserManager<User> UserManager
@inject IViewsService ViewsService

@{
    var roles = await @ViewsService.GetOrganizationRoles();
}

<section style="margin-top: 10px;" class="content">
    <form asp-action="CreateUser">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="row">
            <div class="col col-md-6">
                <div class="card card-primary">
                    <div class="card-header">
                        <h3 class="card-title">Create a new user</h3>
                    </div>
                    <div class="card-body">
                        <div class="form-group">
                            <label asp-for="@Model.FirstName">First Name</label>
                            <input asp-for="@Model.FirstName" class="form-control" autocomplete="firstname" type="text" aria-required="true">
                            <span asp-validation-for="@Model.FirstName" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="@Model.LastName">Last Name</label>
                            <input asp-for="@Model.LastName" type="text" class="form-control" autocomplete="firstname" aria-required="true">
                            <span asp-validation-for="@Model.LastName" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="@Model.Role">Role</label>
                            <select asp-for="@Model.Role" class="form-control custom-select">
                                <option selected disabled>Select Role</option>
                                @foreach (var role in roles)
                                {
                                    <option>@role</option>
                                }
                            </select>
                            <span asp-validation-for="@Model.Role" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="@Model.Email">Email</label>
                            <input asp-for="@Model.Email" type="text" class="form-control" autocomplete="email" aria-required="true">
                            <span asp-validation-for="@Model.Email" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="@Model.Password"></label>
                            <input asp-for="@Model.Password" class="form-control" autocomplete="new-password" aria-required="true" />
                            <span asp-validation-for="@Model.Password" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="@Model.ConfirmPassword"></label>
                            <input asp-for="@Model.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" />
                            <span asp-validation-for="@Model.ConfirmPassword" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <input type="submit" value="Create" class="btn custom-btn-primary">
                            <a asp-controller="Organization" asp-action="Index" class="btn btn-danger">Cancel</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</section>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
